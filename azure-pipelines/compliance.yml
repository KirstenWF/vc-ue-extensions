# IMPORTANT:
# Do not run BinSkim because we do not control producing the binaries. That process is owned by
# Epic. We just provide source code. Since we do not control the build, BinSkim is not needed.

variables:
  Codeql.Enabled: true
  Codeql.SourceRoot: '$(Build.SourcesDirectory)'
  # MicroBuild requires TeamName to be set.
  TeamName: C++ Unreal Engine
  # only test-sign for now
  SignType: test
  TagName: $[replace(variables['Build.SourceBranch'], 'refs/tags/', '')]

trigger:
- main

pr:
  autoCancel: true
  branches:
    include:
    - main
    - dev/*

schedules:
  - cron: "0 12 * * Sun"
    displayName: Weekly run
    branches:
      include:
        - main
    always: true

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: VSEngSS-MicroBuild2022-1ES
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - job: 'UnrealEngine_VisualStudioTools_Release'
        timeoutInMinutes: 1440
        templateContext:
          outputParentDirectory: $(Agent.BuildDirectory)/out/
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish zip'
            targetPath: $(Agent.BuildDirectory)/out/VisualStudioTools.zip
            artifactName: VisualStudioTools.zip
            artifactType: container
            sbomEnabled: false
          - output: pipelineArtifact
            displayName: 'Publish cat'
            targetPath: $(Agent.BuildDirectory)/out/VisualStudioTools.zip.cat
            artifactName: VisualStudioTools.zip.cat
            artifactType: container
            sbomEnabled: false
        steps:
          - powershell: |
              Write-Host "##vso[task.setVariable variable=SHA1]$(git rev-parse $(TagName))"
            displayName: Save tag commit hash
            workingDirectory: '$(Build.SourcesDirectory)'
          - task: MicroBuildSigningPlugin@4
            displayName: Install MicroBuild Signing
            inputs:
              signType: $(SignType)
              zipSources: true
          - task: PowerShell@2
            displayName: "Create zip excluding .git folder"
            inputs:
              targetType: 'inline'
              script: |
                $destinationDirectory = "$(Agent.BuildDirectory)/out"
                New-Item -Path $destinationDirectory -ItemType Directory
                git archive -o "$destinationDirectory/VisualStudioTools.zip" $(SHA1)
          - powershell: New-FileCatalog -Path .\VisualStudioTools.zip -CatalogFilePath .\VisualStudioTools.zip.cat -CatalogVersion 2.0
            displayName: Create standalone catalog
            workingDirectory: '$(Agent.BuildDirectory)\out'
          - task: NuGetToolInstaller@1
            inputs:
              versionSpec: 5.7
          - task: NuGetCommand@2
            displayName: 'NuGet Restore MicroBuild Signing Extension'
            inputs:
              command: 'restore'
              restoreSolution: 'Scripts/SignDetached.proj'
              feedsToUse: 'config'
              restoreDirectory: '$(Build.SourcesDirectory)\Scripts\packages'
          - task: MSBuild@1
            displayName: Sign catalogs
            inputs:
              solution: Scripts/SignDetached.proj
              msbuildArguments: /p:SignType=$(SignType) /p:BaseOutputDirectory=$(Agent.BuildDirectory)\out
          - task: GitHubRelease@1
            displayName: Pre-release to public repo
            condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
            inputs:
              gitHubConnection: $(token)
              repositoryName: microsoft/vc-ue-extensions
              action: create
              target: $(SHA1)
              tagSource: manual
              tag: $(TagName)
              title: $(TagName)
              isDraft: false
              isPreRelease: true
              addChangeLog: false
              assets: |
                  $(Agent.BuildDirectory)\out\VisualStudioTools.zip
                  $(Agent.BuildDirectory)\out\VisualStudioTools.zip.cat
