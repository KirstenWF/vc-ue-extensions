# IMPORTANT:
# Do not run BinSkim because we do not control producing the binaries. That process is owned by
# Epic. We just provide source code. Since we do not control the build, BinSkim is not needed.

trigger:
  branches:
    include:
      - main
  tags:
    include:
      - '*'

pr:
- main

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

variables:
  # MicroBuild requires TeamName to be set.
  TeamName: C++ Cross Platform and Cloud
  # only test-sign for now
  SignType: test
  # This allows us to deploy to the repo.
  GIT_SSH_COMMAND: ssh -i "$(githubDeployKey.secureFilePath)"
  TagName: $[replace(variables['Build.SourceBranch'], 'refs/tags/', '')]

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: VSEngSS-MicroBuild2022-1ES
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - job: 'UnrealEngine_VisualStudioTools_Release'
        timeoutInMinutes: 1440
        steps:
          - task: MicroBuildSigningPlugin@4
            displayName: Install MicroBuild Signing
            inputs:
              signType: $(SignType)
              zipSources: true
            - task: ArchiveFiles@2
              displayName: Create zip from source folder
              inputs:
                rootFolderOrFile: $(Build.SourcesDirectory)
                includeRootFolder: false
                archiveType: zip
                archiveFile: $(Agent.BuildDirectory)/out/VisualStudioTools.zip
                replaceExistingArchive: true
            - powershell: New-FileCatalog -Path .\VisualStudioTools.zip -CatalogFilePath .\VisualStudioTools.zip.cat -CatalogVersion 2.0
              displayName: Create standalone zip catalog
              workingDirectory: '$(Agent.BuildDirectory)\out'
            - task: MSBuild@1
              displayName: Sign catalogs
              inputs:
                solution: .scripts/signing/SignDetached.proj
                msbuildArguments: /p:SignType=$(SignType) /p:BaseOutputDirectory=$(Agent.BuildDirectory)\out
            - bash: |
                echo "##vso[task.setVariable variable=SHA1]$(git rev-parse $(TagName))"
              displayName: Set tag commit hash
              workingDirectory: '$(Build.SourcesDirectory)'
            - task: GitHubRelease@0
              displayName: Publish to public repo
              condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
              inputs:
                gitHubConnection: github/xilaraux
                repositoryName: microsoft/vc-ue-extensions
                action: create
                target: $(SHA1)
                tagSource: manual
                tag: $(TagName)
                title: $(TagName)
                isDraft: false
                isPreRelease: true
                addChangeLog: false
                assets: |
                  $(OutputDirectory)\VisualStudioTools.zip
                  $(OutputDirectory)\VisualStudioTools.zip.cat
                  